!function(n,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.SituDemoUtils=e():n.SituDemoUtils=e()}(this,()=>(()=>{"use strict";var n={d:(e,t)=>{for(var s in t)n.o(t,s)&&!n.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},o:(n,e)=>Object.prototype.hasOwnProperty.call(n,e),r:n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"t",{value:!0})}},e={};function t(n,e){const t=/^\s*([-+]?\d*\.?\d+(?:[eE][-+]?\d+)?)\s*(%|deg|px)?\s*$/,s=n=>{if("number"==typeof n)return{ok:!0,n};if("string"==typeof n){const e=n.match(t);if(e)return{ok:!0,n:Number(e[1])}}return{ok:!1,n:NaN}},o=s(n),i=s(e);if(o.ok&&i.ok){const n=1e-6;return Math.abs(o.n-i.n)<n}return JSON.stringify(n)===JSON.stringify(e)}function s(n){if("string"!=typeof n)return n;const e=n.match(/^#([0-9a-fA-F]{6})$/);return e?`#${e[1].toUpperCase()}`:n}function o(n){return"number"==typeof n&&isFinite(n)?Number(Math.max(0,Math.min(1,n)).toFixed(2)):1}function i(n){return Array.isArray(n)?[...n].filter(n=>n&&"object"==typeof n).sort((n,e)=>(n.position||0)-(e.position||0)).map(n=>{return{position:(e=n.position,"number"==typeof e&&isFinite(e)?Math.round(e):0),hex:s(n.hex),opacity:o(n.opacity)};var e}):n}function a(n){if(!n||"object"!=typeof n)return n;if("solid"===n.mode){const e={mode:"solid"};return"string"==typeof n.hex&&(e.hex=s(n.hex)),e.opacity=o(n.opacity),"number"==typeof n.layer&&isFinite(n.layer)&&(e.layer=Math.round(n.layer)),e}if("gradient"===n.mode){const e=n.type||n.gradientType||"linear",t={mode:"gradient",type:e};return"radial"===e?(n.radialShape&&(t.radialShape=n.radialShape),n.radialSize&&(t.radialSize=n.radialSize),n.radialPosition&&(t.radialPosition=n.radialPosition)):"conic"===e&&n.conicPosition&&(t.conicPosition=n.conicPosition),t.opacity=o(n.opacity),"linear"!==e&&"conic"!==e||(t.angle="number"==typeof n.angle?n.angle:0),Array.isArray(n.stops)&&(t.stops=i(n.stops)),"number"==typeof n.layer&&isFinite(n.layer)&&(t.layer=Math.round(n.layer)),t}return n}function r(n){return Array.isArray(n)?n.map(a).map((n,e)=>n&&"object"==typeof n?"number"==typeof n.layer&&isFinite(n.layer)?n:{...n,layer:e+1}:n):n}function c(n,e){const s=n=>n&&"object"==typeof n&&!Array.isArray(n),o=Array.isArray;if(o(n)&&o(e)){const i=[],a=e.some(n=>n&&"object"==typeof n&&Object.prototype.hasOwnProperty.call(n,"position")),r=e.some(n=>n&&"object"==typeof n&&Object.prototype.hasOwnProperty.call(n,"layer"));if(a){const s=n=>"number"==typeof n&&isFinite(n)?Math.round(n):void 0,o=new Map;n.forEach((n,e)=>{if(n&&"object"==typeof n){const t=s(n.position);void 0!==t&&o.set(t,{s:n,idx:e})}});for(let a=0;a<e.length;a++){const r=e[a];if(!r)continue;const f=s(r.position),d=void 0!==f?o.get(f):void 0,l=d?d.s:n[a]||{};if(l&&"object"==typeof l&&"object"==typeof r){const n=c(l,r);n&&"object"==typeof n&&Object.keys(n).length>0&&(i[a]=n)}else t(l,r)||(i[a]=r)}return i}if(r){const s=n=>"number"==typeof n&&isFinite(n)?Math.round(n):void 0,o=new Map;if(n.forEach((n,e)=>{if(n&&"object"==typeof n){const t=s(n.layer);void 0!==t&&o.set(t,{f:n,idx:e})}}),0===e.length&&n.length>0)return n.map((n,e)=>({l:!0,p:n,u:e}));for(let a=0;a<e.length;a++){const r=e[a];if(!r)continue;const f=s(r.layer),d=void 0!==f?o.get(f):void 0,l=d?d.f:n[a]||{};if(l&&"object"==typeof l&&"object"==typeof r){const n=c(l,r);n&&"object"==typeof n&&Object.keys(n).length>0&&(i[a]=n)}else t(l,r)||(i[a]=r)}return i}const f=Math.max(n.length,e.length);for(let a=0;a<f;a++){const r=n[a],f=e[a];if(void 0!==f)if(s(r)&&s(f)){const n=c(r,f);s(n)&&Object.keys(n).length>0||o(n)&&n.length>0?i[a]=n:t(r,f)||(i[a]=f)}else if(o(r)&&o(f)){const n=c(r,f);o(n)&&n.length>0?i[a]=n:t(r,f)||(i[a]=f)}else t(r,f)||(i[a]=f)}return i}if(s(n)&&s(e)){const o={},i=Object.keys(e);for(const a of i){const i=n[a],r=e[a];if(s(i)&&s(r)){const n=c(i,r);"object"==typeof n&&null!=n&&Object.keys(n).length>0||Array.isArray(n)&&n.length>0?o[a]=n:t(i,r)||(o[a]=r)}else if(Array.isArray(i)&&Array.isArray(r)){const n=c(i,r);Array.isArray(n)&&n.length>0?o[a]=n:t(i,r)||(o[a]=r)}else t(i,r)||(o[a]=r)}return o}return t(n,e)?Array.isArray(e)?[]:{}:e}function f(n,e){const s=[];if(!Array.isArray(n)||!Array.isArray(e))return s;const o=new Map,i=new Map;n.forEach((n,e)=>{n&&"number"==typeof n.position&&o.set(n.position,{stop:n,index:e})}),e.forEach((n,e)=>{n&&"number"==typeof n.position&&i.set(n.position,{stop:n,index:e})}),new Set([...o.keys(),...i.keys()]);const a=Math.max(n.length,e.length);for(let i=0;i<a;i++){let a={},r={};if(e[i]&&"number"==typeof e[i].position){const n=e[i].position,t=o.get(n);t&&(a=t.stop)}0===Object.keys(a).length&&(a=n[i]||{}),r=e[i]||{};const c=new Set;Object.keys(r).forEach(n=>{if("position"===n||"hue"===n||"saturation"===n||"value"===n||"opacity"===n||"hex"===n){const e=a[n],s=r[n];if("number"==typeof e&&"number"==typeof s){const t="position"===n?.1:"opacity"===n?.01:.001;isFinite(e)&&isFinite(s)&&Math.abs(e-s)<t||c.add(n)}else t(r[n],a[n])||c.add(n)}else t(r[n],a[n])||c.add(n)}),s[i]=c}return s}function d(n,e){const s=[];if(!Array.isArray(n)||!Array.isArray(e))return s;const o=n=>Array.isArray(n)&&n.some(n=>n&&"number"==typeof n.layer);if(!o(n)&&!o(e)){const o=Math.max(n.length,e.length);for(let i=0;i<o;i++){const o=n[i]||{},a=e[i]||{},r={top:new Set,stops:[]};Object.keys(a).forEach(n=>{"stops"===n?Array.isArray(a.stops)&&(r.stops=f(o.stops,a.stops),r.stops.some(n=>n.size>0)&&r.top.add("stops")):t(a[n],o[n])||r.top.add(n)}),s[i]=r}return s}const i=new Map,a=new Map;return n.forEach((n,e)=>{n&&"number"==typeof n.layer&&i.set(Math.round(n.layer),{f:n,idx:e})}),e.forEach((n,e)=>{n&&"number"==typeof n.layer&&a.set(Math.round(n.layer),{f:n,idx:e})}),new Set([...i.keys(),...a.keys()]).forEach(n=>{const e=i.get(n),o=a.get(n),r=e?e.f:{},c=o?o.f:{},d={top:new Set,stops:[]};Object.keys(c).forEach(n=>{"stops"===n?Array.isArray(c.stops)&&(d.stops=f(r.stops,c.stops),d.stops.some(n=>n.size>0)&&d.top.add("stops")):"layer"===n||t(c[n],r[n])||d.top.add(n)}),o&&(s[o.idx]=d),e&&(s[e.idx]=d)}),s}function l(n,e){const s=[],o=Math.max(Array.isArray(n)?n.length:0,Array.isArray(e)?e.length:0);for(let i=0;i<o;i++){const o=(Array.isArray(n)?n[i]:void 0)||{},a=(Array.isArray(e)?e[i]:void 0)||{},r=new Set;new Set([...Object.keys(o||{}),...Object.keys(a||{})]).forEach(n=>{"stops"!==n?t(a[n],o[n])||r.add(n):Array.isArray(o.stops)!==Array.isArray(a.stops)&&r.add("stops")});const c=Array.isArray(o.stops)?o.stops:[],f=Array.isArray(a.stops)?a.stops:[],d=[],l=new Set;c.forEach((n,e)=>l.add(e)),f.forEach((n,e)=>l.add(e));for(const n of l){const e=c[n]||{},s=f[n]||{},o=new Set;new Set([...Object.keys(e),...Object.keys(s)]).forEach(n=>{if("position"===n){const t=Number(s[n]),i=Number(e[n]),a=.5;isFinite(t)&&isFinite(i)&&Math.abs(t-i)<a||o.add(n)}else t(s[n],e[n])||o.add(n)}),d[n]=o}const p=new Set;a.border&&"object"==typeof a.border&&Object.keys(a.border).forEach(n=>{t(a.border[n],o.border?o.border[n]:void 0)||p.add(n)});const u=new Set;a.typography&&"object"==typeof a.typography&&Object.keys(a.typography).forEach(n=>{t(a.typography[n],o.typography?o.typography[n]:void 0)||u.add(n)}),s.push({top:r,stops:d,borderTop:p,typographyTop:u})}return s}function p(n){if(!n||"object"!=typeof n)return n;if("gradient"!==n.mode)return n;const e=n.type||n.gradientType||"linear",t={mode:"gradient",type:e};return"radial"===e?(n.radialShape&&(t.radialShape=n.radialShape),n.radialSize&&(t.radialSize=n.radialSize),n.radialPosition&&(t.radialPosition=n.radialPosition)):"conic"===e&&n.conicPosition&&(t.conicPosition=n.conicPosition),t.opacity=o(n.opacity),"linear"!==e&&"conic"!==e||(t.angle="number"==typeof n.angle?n.angle:0),Array.isArray(n.stops)&&(t.stops=i(n.stops)),"number"==typeof n.layer&&isFinite(n.layer)&&(t.layer=Math.round(n.layer)),t}function u(n){if(!n)return 1;const e=n.match(/rgba?\(([^)]+)\)/i);if(e){const n=e[1].split(",").map(n=>n.trim()),t=void 0!==n[3]?parseFloat(n[3]):1;return isFinite(t)?Math.max(0,Math.min(1,t)):1}const t=n.match(/oklch\(([^)]+)\)/i);if(t){const n=t[1].split("/").map(n=>n.trim());if(void 0!==n[1]){const e=parseFloat(n[1]);return isFinite(e)?Math.max(0,Math.min(1,e)):1}}return 1}function y(n){return Math.min(1,Math.max(0,n))}function j(n){return n*Math.PI/180}function h(n){return n<=.0031308?12.92*n:1.055*Math.pow(n,1/2.4)-.055}function g(n){if(!n)return"#D9D9D9";const e=n.match(/oklch\(([^)]+)\)/i);if(e){const n=e[1].split("/")[0].trim().split(/\s+/);if(n.length>=3){const e=n[0],t=n[1],s=n[2];try{const n=function(n,e,t){let s=n;s="string"==typeof s&&s.trim().endsWith("%")?parseFloat(s)/100:parseFloat(s);const o=parseFloat(e),i=function(n){const e=String(n).trim().toLowerCase();return e.endsWith("deg")?parseFloat(e):e.endsWith("rad")?parseFloat(e)*(180/Math.PI):e.endsWith("turn")?360*parseFloat(e):e.endsWith("grad")?.9*parseFloat(e):parseFloat(e)}(t),a=o*Math.cos(j(i)),r=o*Math.sin(j(i)),{r:c,g:f,b:d}=function(n,e,t){const s=n+.3963377774*e+.2158037573*t,o=n-.1055613458*e-.0638541728*t,i=n-.0894841775*e-1.291485548*t,a=s*s*s,r=o*o*o,c=i*i*i;return{r:4.0767416621*a-3.3077115913*r+.2309699292*c,g:-1.2684380046*a+2.6097574011*r-.3413193965*c,b:-.0041960863*a+.7034186147*r+1.707614701*c}}(s,a,r),l=y(h(c)),p=y(h(f)),u=y(h(d));return{r:Math.round(255*l),g:Math.round(255*p),b:Math.round(255*u)}}(e,t,s),o=n.r.toString(16).padStart(2,"0");return`#${o}${n.g.toString(16).padStart(2,"0")}${n.b.toString(16).padStart(2,"0")}`.toUpperCase()}catch(n){}}}if(n.startsWith("#")){const e=n.replace(/[^0-9a-fA-F]/g,"");if(3===e.length)return`#${e[0]+e[0]}${e[1]+e[1]}${e[2]+e[2]}`.toUpperCase();if(4===e.length)return`#${e[0]+e[0]}${e[1]+e[1]}${e[2]+e[2]}`.toUpperCase();if(6===e.length||8===e.length)return`#${e.slice(0,6)}`.toUpperCase()}try{if(!g.h){const n=document.createElement("canvas");n.width=n.height=1,g.h=n.getContext("2d")}const e=g.h;e.fillStyle="#D9D9D9",e.fillStyle=n;const t=e.fillStyle;if(t.startsWith("#"))return t.toUpperCase();const s=t.match(/rgba?\(\s*(\d+)\s*,?\s*(\d+)\s*,?\s*(\d+)/i);if(s){const n=Number(s[1]).toString(16).padStart(2,"0");return`#${n}${Number(s[2]).toString(16).padStart(2,"0")}${Number(s[3]).toString(16).padStart(2,"0")}`.toUpperCase()}}catch(n){}const t=document.createElement("div");t.style.backgroundColor=n,document.body.appendChild(t);const s=window.getComputedStyle(t).backgroundColor||"";document.body.removeChild(t);const o=s.match(/rgba?\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)/i)||s.match(/rgb\(\s*(\d+)\s+(\d+)\s+(\d+)/i);return o?`#${Number(o[1]).toString(16).padStart(2,"0")}${Number(o[2]).toString(16).padStart(2,"0")}${Number(o[3]).toString(16).padStart(2,"0")}`.toUpperCase():"#D9D9D9"}function b(){try{if(!document||"function"!=typeof document.querySelectorAll)return;const n=Array.from(document.querySelectorAll("[data-id], [data-inspector-id]"));if(!n.length)return;n.forEach(n=>{try{if(!n)return;const e=window.getComputedStyle(n),t=(()=>{const n=n=>{const e=parseFloat(n);return Number.isFinite(e)?Math.round(e):0},t={};try{t.display=e.display}catch(n){}try{t.flexDirection=e.flexDirection}catch(n){}try{t.flexWrap=e.flexWrap}catch(n){}try{t.justifyContent=e.justifyContent}catch(n){}try{t.alignItems=e.alignItems}catch(n){}try{t.gap=n(e.gap)}catch(n){t.gap=0}try{t.rowGap=n(e.rowGap)}catch(n){t.rowGap=0}try{t.columnGap=n(e.columnGap)}catch(n){t.columnGap=0}try{t.paddingTop=n(e.paddingTop)}catch(n){t.paddingTop=0}try{t.paddingRight=n(e.paddingRight)}catch(n){t.paddingRight=0}try{t.paddingBottom=n(e.paddingBottom)}catch(n){t.paddingBottom=0}try{t.paddingLeft=n(e.paddingLeft)}catch(n){t.paddingLeft=0}try{t.marginTop=n(e.marginTop)}catch(n){t.marginTop=0}try{t.marginRight=n(e.marginRight)}catch(n){t.marginRight=0}try{t.marginBottom=n(e.marginBottom)}catch(n){t.marginBottom=0}try{t.marginLeft=n(e.marginLeft)}catch(n){t.marginLeft=0}try{t.width=e.width}catch(n){}try{t.height=e.height}catch(n){}try{t.minWidth=e.minWidth}catch(n){}try{t.minHeight=e.minHeight}catch(n){}try{t.maxWidth=e.maxWidth}catch(n){}try{t.maxHeight=e.maxHeight}catch(n){}return t})(),s=n=>{try{const e=n?String(n).replace(/["']/g,"").replace(/\s*,\s*/g,", ").trim():"";if(!e)return"Inter, ui-sans-serif, system-ui, sans-serif";const t=e.toLowerCase(),s=t.includes("inter");if(s)return"Inter, ui-sans-serif, system-ui, sans-serif";const o=t.includes("-apple-system")||t.includes("blinkmacsystemfont"),i=t.startsWith("system-ui")||t.startsWith("ui-sans-serif")||t.endsWith("sans-serif");return!o&&!i||s?e:"Inter, ui-sans-serif, system-ui, sans-serif"}catch(n){return"Inter, ui-sans-serif, system-ui, sans-serif"}},o=()=>{const n={states:{default:{typography:{fontFamily:s(e.fontFamily),fontSize:Math.round(parseFloat(e.fontSize)||0),fontWeight:String(e.fontWeight||"400"),lineHeight:function(){const n=e.lineHeight,t=parseFloat(n);return Number.isFinite(t)?Math.round(t):Math.round(parseFloat(e.fontSize)||0)}(),letterSpacing:Math.round(parseFloat(e.letterSpacing)||0),textAlign:e.textAlign||"left",verticalAlign:e.verticalAlign||"baseline"},appearance:{borderRadius:function(){try{return Math.round(parseFloat(e.borderRadius)||0)}catch(n){return 0}}(),opacity:function(){const n=parseFloat(e.opacity);return Number.isFinite(n)?n:1}()},layout:t}}};try{const t=e.backgroundImage,s=e.backgroundColor,o=n=>{const e=[];return n.forEach((t,s)=>{const o=t.match(/(\d+(?:\.\d+)?)(%|px)/);let i=o&&"%"===o[2]?parseFloat(o[1]):void 0,a=t.replace(/\d+(?:\.\d+)?(?:%|px)\s*/,"").trim();void 0===i&&n.length>1?i=0===s?0:s===n.length-1?100:Math.round(s/(n.length-1)*100):void 0===i&&(i=0);let r=null;const c=(a||"").match(/(rgba?\([^\)]+\)|hsla?\([^\)]+\)|oklch\([^\)]+\))/i);if(c)r=c[1];else{const n=(a||"").match(/#[0-9a-fA-F]{3,8}/i);if(n)r=n[0];else{const n=(a||"").match(/^[a-zA-Z]+$/);n&&(r=n[0])}}if(!r||!r.trim())return;let f,d;try{if(r=r.trim(),/^#[0-9a-fA-F]{3,8}$/i.test(r))f=r.toUpperCase(),d=1;else if(/^rgba?\(/i.test(r)){const n=r.match(/rgba?\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)(?:\s*,\s*(\d*\.?\d+))?\s*\)/i);if(n){const e=parseInt(n[1],10);f=function(n,e,t){return"#"+((1<<24)+(n<<16)+(e<<8)+t).toString(16).slice(1)}(e,parseInt(n[2],10),parseInt(n[3],10)).toUpperCase(),d=null!=n[4]?Math.max(0,Math.min(1,parseFloat(n[4]))):1}else f=g(r),d=u(r)}else f=g(r),d=u(r);if(!f||"#"===f)return;e.push({hex:f,position:i,opacity:d})}catch(n){return}}),e};if(t&&"none"!==t){const e=t.match(/linear-gradient\((.+)\)/i);if(e){const t=e[1],s=t.match(/(to\s+)?(top|bottom|left|right|[-+]?\d+\.?\d*deg)/i);let i=0;if(s){const n=s[2];n.includes("deg")?i=parseFloat(n):"top"===n?i=0:"bottom"===n?i=180:"left"===n?i=270:"right"===n&&(i=90)}const a=[];let r="",c=0;for(let n=0;n<t.length;n++){const e=t[n];"("===e?(c++,r+=e):")"===e?(c--,r+=e):","===e&&0===c?(r.trim()&&a.push(r.trim()),r=""):r+=e}r.trim()&&a.push(r.trim());const f=o(s?a.slice(1):a);f.length>=2&&(n.states.default.fill=[{mode:"gradient",type:"linear",angle:i,stops:f,layer:1}])}else{const e=t.match(/radial-gradient\((.+)\)/i);if(e){const t=e[1],s=[];let i="",a=0;for(let n=0;n<t.length;n++){const e=t[n];"("===e?(a++,i+=e):")"===e?(a--,i+=e):","===e&&0===a?(i.trim()&&s.push(i.trim()),i=""):i+=e}i.trim()&&s.push(i.trim());const r=s.findIndex(n=>/(rgba?\(|#|oklch\(|hsla?\()/.test(n)),c=o(r>-1?s.slice(r):s);c.length>=2&&(n.states.default.fill=[{mode:"gradient",type:"radial",radialShape:"circle",radialSize:"farthest-corner",radialPosition:"center",stops:c,layer:1}])}else{const e=t.match(/conic-gradient\((.+)\)/i);if(e){const t=e[1],s=t.match(/from\s+([-+]?\d+\.?\d*)deg/i),i=s?parseFloat(s[1]):0,a=s?t.replace(/from\s+[-+]?\d+\.?\d*deg\s*,?\s*/,"").trim():t,r=[];let c="",f=0;for(let n=0;n<a.length;n++){const e=a[n];"("===e?(f++,c+=e):")"===e?(f--,c+=e):","===e&&0===f?(c.trim()&&r.push(c.trim()),c=""):c+=e}c.trim()&&r.push(c.trim());const d=o(r);d.length>=2&&(n.states.default.fill=[{mode:"gradient",type:"conic",conicPosition:"center",angle:i,stops:d,layer:1}])}}}}if(!n.states.default.fill&&s&&"transparent"!==s)try{const e=g(s),t=u(s);n.states.default.fill=[{mode:"solid",hex:e,opacity:t,layer:1}]}catch(n){}}catch(n){}try{const t=parseFloat(e.borderWidth)||0,s=e.borderStyle||"none",o=e.borderColor||"";if(t>0&&"none"!==s){let e="#000000",i=1;try{const n=o.match(/rgb\((\d+),\s*(\d+),\s*(\d+)\)/);if(n){const t=parseInt(n[1]),s=parseInt(n[2]),o=parseInt(n[3]);e=`#${t.toString(16).padStart(2,"0")}${s.toString(16).padStart(2,"0")}${o.toString(16).padStart(2,"0")}`.toUpperCase()}else{const n=o.match(/rgba\((\d+),\s*(\d+),\s*(\d+),\s*([\d.]+)\)/);if(n){const t=parseInt(n[1]),s=parseInt(n[2]),o=parseInt(n[3]);i=parseFloat(n[4]),e=`#${t.toString(16).padStart(2,"0")}${s.toString(16).padStart(2,"0")}${o.toString(16).padStart(2,"0")}`.toUpperCase()}else e=g(o),i=u(o)}}catch(n){}n.states.default.border={mode:"solid",width:Math.round(t),hex:e,style:s.toLowerCase(),opacity:i,edge:"all"}}}catch(n){}return n},i=n.getAttribute("data-original-element");if(i)try{const e=JSON.parse(i);e.states||(e.states={default:{}}),e.states.default||(e.states.default={});const s=e.states.default.layout||{};if(Object.keys(t).forEach(n=>{Object.prototype.hasOwnProperty.call(s,n)||(s[n]=t[n])}),e.states.default.layout=s,!e.states.default.fill||!Array.isArray(e.states.default.fill)||0===e.states.default.fill.length){const n=o();n.states.default.fill&&Array.isArray(n.states.default.fill)&&n.states.default.fill.length>0&&(e.states.default.fill=n.states.default.fill)}if(!e.states.default.border||"object"!=typeof e.states.default.border||0===Object.keys(e.states.default.border).length){const n=o();n.states.default.border&&"object"==typeof n.states.default.border&&Object.keys(n.states.default.border).length>0&&(e.states.default.border=n.states.default.border)}try{n.setAttribute("data-original-element",JSON.stringify(e))}catch(n){}}catch(n){}else{const e=o();try{n.setAttribute("data-original-element",JSON.stringify(e))}catch(n){}}}catch(n){}})}catch(n){}}function m(){try{if("undefined"==typeof MutationObserver||!document||!document.body)return;if(window.__situBaselineObserverInstalled)return;const n=new MutationObserver(n=>{const e=new Set;if(n.forEach(n=>{n.addedNodes&&0!==n.addedNodes.length&&n.addedNodes.forEach(n=>{if(n&&1===n.nodeType)try{n.matches&&(n.matches("[data-id]")||n.matches("[data-inspector-id]"))&&e.add(n);const t=n.querySelectorAll?n.querySelectorAll("[data-id], [data-inspector-id]"):[];Array.from(t).forEach(n=>e.add(n))}catch(n){}})}),0===e.size)return;const t=n=>{try{n.forEach(n=>{try{const e=window.getComputedStyle(n),t=n=>{const e=parseFloat(n);return Number.isFinite(e)?Math.round(e):0},s={display:e.display,flexDirection:e.flexDirection,flexWrap:e.flexWrap,justifyContent:e.justifyContent,alignItems:e.alignItems,gap:t(e.gap),rowGap:t(e.rowGap),columnGap:t(e.columnGap),paddingTop:t(e.paddingTop),paddingRight:t(e.paddingRight),paddingBottom:t(e.paddingBottom),paddingLeft:t(e.paddingLeft),marginTop:t(e.marginTop),marginRight:t(e.marginRight),marginBottom:t(e.marginBottom),marginLeft:t(e.marginLeft),width:e.width,height:e.height,minWidth:e.minWidth,minHeight:e.minHeight,maxWidth:e.maxWidth,maxHeight:e.maxHeight},o=n.getAttribute("data-original-element");if(o)try{const e=JSON.parse(o);e.states||(e.states={default:{}}),e.states.default||(e.states.default={});const t=e.states.default.layout||{};Object.keys(s).forEach(n=>{Object.prototype.hasOwnProperty.call(t,n)||(t[n]=s[n])}),e.states.default.layout=t;try{n.setAttribute("data-original-element",JSON.stringify(e))}catch(n){}}catch(n){}else{const t={states:{default:{typography:{fontFamily:canonicalizeFontFamilyForBaseline(e.fontFamily),fontSize:Math.round(parseFloat(e.fontSize)||0),fontWeight:String(e.fontWeight||"400"),lineHeight:function(){const n=e.lineHeight,t=parseFloat(n);return Number.isFinite(t)?Math.round(t):Math.round(parseFloat(e.fontSize)||0)}(),letterSpacing:Math.round(parseFloat(e.letterSpacing)||0),textAlign:e.textAlign||"left",verticalAlign:e.verticalAlign||"baseline"},appearance:{borderRadius:function(){try{return Math.round(parseFloat(e.borderRadius)||0)}catch(n){return 0}}(),opacity:function(){const n=parseFloat(e.opacity);return Number.isFinite(n)?n:1}()},layout:s}}};try{n.setAttribute("data-original-element",JSON.stringify(t))}catch(n){}}}catch(n){}})}catch(n){}};try{window.requestIdleCallback?requestIdleCallback(()=>t(e)):setTimeout(()=>t(e),200)}catch(n){try{setTimeout(()=>t(e),200)}catch(n){}}});n.observe(document.body,{childList:!0,subtree:!0}),window.__situBaselineObserverInstalled=!0,window.__situBaselineObserver=n}catch(n){}}n.r(e),n.d(e,{collectChangedKeySets:()=>l,computeDelta:()=>c,generateFullJsonDiff:()=>F,generateJsonDiffFromHighlighted:()=>M,mergeFillsWithUpdates:()=>$,populateBaselinesFromComputedStyles:()=>b,pruneGradientFillForDisplay:()=>p,valuesEqualLoose:()=>t}),new Map;try{if(document&&"complete"===document.readyState)try{m()}catch(n){}else window.addEventListener("load",()=>{try{m()}catch(n){}})}catch(n){}function $(n,e){const t=Array.isArray(n)?[...n]:[],s=Array.isArray(e)?e:[],o=Math.max(t.length,s.length),i=o-t.length,a=o-s.length;function r(n,e){const t=Array.isArray(n)?n.map(n=>({...n})):[];if(!Array.isArray(e)||0===e.length)return t.length>0?t:void 0;const s=0===t.length?e.map((n,t)=>{const s={...n};if("number"!=typeof s.position||!isFinite(s.position)){const n=e.length;s.position=n>1?"number"!=typeof(o=t/(n-1)*100)?o:Math.round(o):0}var o;return s}):e.map(n=>({...n}));if(0===t.length&&s.length>0)return s.map(n=>({...n}));if(s.length>1&&s.every(n=>"number"==typeof n.position&&isFinite(n.position)))return s.map(n=>({...n})).sort((n,e)=>n.position-e.position);for(let n=0;n<s.length;n++){const e=s[n];if(e)if(Object.prototype.hasOwnProperty.call(e,"position")&&"number"==typeof e.position){const n=t.findIndex(n=>n&&"number"==typeof n.position&&n.position===e.position);n>=0?t[n]={...t[n],...e}:t.push({...e})}else t[n]?t[n]={...t[n],...e}:t[n]={...e}}return t.map(n=>({...n})).sort((n,e)=>("number"==typeof n.position?n.position:0)-("number"==typeof e.position?e.position:0))}const c=n=>Array.isArray(n)&&n.some(n=>n&&"number"==typeof n.layer);if(c(t)||c(s)){const n=n=>"number"==typeof n&&isFinite(n)?Math.round(n):void 0,e=new Map,o=new Map;t.forEach((t,s)=>{const o=n(t&&t.layer);void 0!==o&&e.set(o,{f:t,idx:s})}),s.forEach((e,t)=>{const s=n(e&&e.layer);void 0!==s&&o.set(s,{f:e,idx:t})});const i=Array.from(new Set([...e.keys(),...o.keys()])).sort((n,e)=>n-e),a=[];return i.forEach((n,t)=>{const s=e.get(n),i=o.get(n),c=s&&s.f||{},f=i?i.f||{}:void 0;if(f){if(f&&f.deleted)return;if("solid"===f.mode){const e={mode:"solid",hex:"string"==typeof f.hex?f.hex:"string"==typeof c.hex?c.hex:c.hex1||"#D9D9D9",opacity:"number"==typeof f.opacity?f.opacity:"number"==typeof c.opacity?c.opacity:1,layer:n};return void(a[t]=e)}const e={...c,...f,layer:n};if("gradient"===c.mode||"gradient"===f.mode){const n=r(Array.isArray(c.stops)?c.stops:[],Array.isArray(f.stops)?f.stops:[]);n&&n.length>=2&&(e.stops=n,delete e.hex);const t=f&&f.type||c&&c.type||e.type||"linear";e.type=t,"radial"===e.type&&(!e.radialShape&&c.radialShape&&(e.radialShape=c.radialShape),!e.radialSize&&c.radialSize&&(e.radialSize=c.radialSize),!e.radialPosition&&c.radialPosition&&(e.radialPosition=c.radialPosition)),"conic"===e.type&&!e.conicPosition&&c.conicPosition&&(e.conicPosition=c.conicPosition)}a[t]=e}else a[t]={...c,layer:n}}),a.filter(Boolean)}const f=[];for(let n=0;n<o;n++){const e=n-i,o=n-a,c=e>=0&&t[e]||{},d=o>=0?s[o]:void 0;if(d){if("solid"===d.mode){const e={mode:"solid",hex:"string"==typeof d.hex?d.hex:"string"==typeof c.hex?c.hex:c.hex1||"#D9D9D9",opacity:"number"==typeof d.opacity?d.opacity:"number"==typeof c.opacity?c.opacity:1,layer:"number"==typeof d.layer?d.layer:"number"==typeof c.layer?c.layer:void 0};f[n]=e;continue}const e={...c,...d};if("gradient"===c.mode||"gradient"===d.mode){const n=r(Array.isArray(c.stops)?c.stops:[],Array.isArray(d.stops)?d.stops:[]);n&&n.length>=2&&(e.stops=n,delete e.hex);const t=d&&d.type||c&&c.type||e.type||"linear";e.type=t,"radial"===e.type&&(!e.radialShape&&c.radialShape&&(e.radialShape=c.radialShape),!e.radialSize&&c.radialSize&&(e.radialSize=c.radialSize),!e.radialPosition&&c.radialPosition&&(e.radialPosition=c.radialPosition)),"conic"===e.type&&!e.conicPosition&&c.conicPosition&&(e.conicPosition=c.conicPosition)}f[n]=e}else f[n]=c}return f.filter(n=>n)}function v(n){return"string"!=typeof(e=n)&&(e=JSON.stringify(e,null,2)),e.replace(/("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g,function(n){let e="json-number";return/^"/.test(n)?e=/:$/.test(n)?"json-key":"json-string":/true|false/.test(n)?e="json-boolean":/null/.test(n)&&(e="json-null"),`<span class="${e}">${n}</span>`}).replace(/\n/g,"<br>").replace(/\s/g,"&nbsp;");var e}function M(n,e,t,s){const o=(n||"").split("\n"),i=(e||"").split("\n"),a=(t||"").split("\n"),r=(s||"").split("\n"),c=o.length,f=i.length,d=Array.from({length:c+1},()=>new Array(f+1).fill(0));for(let n=c-1;n>=0;n--)for(let e=f-1;e>=0;e--)o[n]===i[e]?d[n][e]=d[n+1][e+1]+1:d[n][e]=Math.max(d[n+1][e],d[n][e+1]);const l=[];let p=0,u=0;for(;p<c&&u<f;)o[p]===i[u]?(l.push({type:"equal",i:p,j:u}),p++,u++):d[p+1][u]>=d[p][u+1]?(l.push({type:"removed",i:p}),p++):(l.push({type:"added",j:u}),u++);for(;p<c;)l.push({type:"removed",i:p}),p++;for(;u<f;)l.push({type:"added",j:u}),u++;let y="";for(const n of l)"equal"===n.type?y+=`<span class="json-diff-line json-diff-unchanged">${r[n.j]||""}</span>`:"removed"===n.type?y+=`<span class="json-diff-line json-diff-removed">${a[n.i]||""}</span>`:y+=`<span class="json-diff-line json-diff-added">${r[n.j]||""}</span>`;return y}function F(n,e,t){const s=n||"",o=e||"";let i,a;try{i=JSON.parse(n),a=JSON.parse(e)}catch(i){return M(s,o,t?t(n):v(n),t?t(e):v(e))}let c=[];try{const n=JSON.parse(e),t=Array.isArray(n?.updated)?n.updated:[],s=t.length;for(let n=0;n<s;n++){const e=t[n]||{},s={};if(Object.prototype.hasOwnProperty.call(e,"fills")){const n=r(e.fills);s.fillsChanges=d([],n)}if(Object.prototype.hasOwnProperty.call(e,"appearance")){const n=e.appearance||{},t=new Set(Object.keys(n));s.appearanceTop=t}if(Object.prototype.hasOwnProperty.call(e,"border")){const n=e.border||{},t=new Set(Object.keys(n));s.borderTop=t}e.states&&"object"==typeof e.states&&(s.states={},Object.keys(e.states).forEach(n=>{const t=e.states[n]||{},o={};if(Array.isArray(t.fill)){const n=r(t.fill);o.fillsChanges=d([],n)}t.appearance&&"object"==typeof t.appearance&&(o.appearanceTop=new Set(Object.keys(t.appearance))),t.border&&"object"==typeof t.border&&(o.borderTop=new Set(Object.keys(t.border)));const i=t.properties||{};if(Array.isArray(i.fill)){const n=r(i.fill);o.fillsChanges=d([],n)}i.appearance&&"object"==typeof i.appearance&&(o.appearanceTop=new Set(Object.keys(i.appearance))),i.border&&"object"==typeof i.border&&(o.borderTop=new Set(Object.keys(i.border))),Object.keys(o).length>0&&(s.states[n]=o)})),c[n]=s}}catch(n){c=[]}const f=t?t(n).split("\n"):v(n).split("\n"),l=t?t(e).split("\n"):v(e).split("\n"),p=n.split("\n"),u=e.split("\n"),y=(n=>{let e=0,t=n.length;for(;e<n.length&&!n[e].includes('"original"')&&!n[e].includes('"updated"');)e++;for(e++,e++;t>e&&!n[t-1].includes("]");)t--;return t--,{start:e,end:t}})(u),j=l.slice(0,y.start+1),h=l.slice(y.start+1,y.end+1),g=l.slice(y.end+1);function b(n,e,t,s){const o=[];let i=-1,a=-1,r=!1,c=!1,f=!1,d=-1,l=0,p=!1,u=!1,y=0,j=!1,h=0,g=!1,b=0,m=!1,$=0,v=!1,M=0,F=!1,A=!1,O=-1,w=0,S=!1,N=!1,x=0,D=!1,I=0,J=!1,B=0;for(let k=0;k<n.length;k++){const _=n[k],z=e[k]||"",T=_.trim();let W=!1,H=null;if('"appearance": {'===T){u=!0,y=1,o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`);continue}if(u){const n=_.match(/"([^"]+)":\s*/);if(n&&1===y){const e=n[1],a=s[i]||{};if(a.appearanceTop&&a.appearanceTop.has(e)){const n="removed"===t?"json-diff-removed":"json-diff-added";o.push(`<span class="json-diff-line ${n}">${z}</span>`)}else o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`)}else o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`);y+=(_.match(/\{/g)||[]).length-(_.match(/\}/g)||[]).length,y<=0&&(u=!1);continue}if('"typography": {'===T){j=!0,h=1,o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`);continue}if(j){const n=_.match(/"([^"]+)":\s*/);if(n&&1===h){const e=n[1],a=s[i]||{};if(a.typographyTop&&a.typographyTop.has(e)){const n="removed"===t?"json-diff-removed":"json-diff-added";o.push(`<span class="json-diff-line ${n}">${z}</span>`)}else o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`)}else o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`);h+=(_.match(/\{/g)||[]).length-(_.match(/\}/g)||[]).length,h<=0&&(j=!1);continue}if('"border": {'===T){g=!0,b=1,o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`);continue}if(g){const n=_.match(/"([^"]+)":\s*/);if(n&&1===b){const e=n[1],a=s[i]||{};if(a.borderTop&&a.borderTop.has(e)){const n="removed"===t?"json-diff-removed":"json-diff-added";o.push(`<span class="json-diff-line ${n}">${z}</span>`)}else o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`)}else o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`);b+=(_.match(/\{/g)||[]).length-(_.match(/\}/g)||[]).length,b<=0&&(g=!1);continue}if('"states": {'===T){m=!0,$=1,o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`);continue}if(m){if('"default": {'===T){v=!0,M=1,o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`);continue}if(v){if('"appearance": {'===T){N=!0,x=1,o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`);continue}if(N){const n=_.match(/"([^"]+)":\s*/);if(n&&1===x){const e=n[1],a=s[i]||{},r=a.states&&a.states.default;if(r&&r.appearanceTop&&r.appearanceTop.has(e)){const n="removed"===t?"json-diff-removed":"json-diff-added";o.push(`<span class="json-diff-line ${n}">${z}</span>`)}else o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`)}else o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`);x+=(_.match(/\{/g)||[]).length-(_.match(/\}/g)||[]).length,x<=0&&(N=!1);continue}if('"typography": {'===T){D=!0,I=1,o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`);continue}if(D){const n=_.match(/"([^"]+)":\s*/);if(n&&1===I){const e=n[1],a=s[i]||{},r=a.states&&a.states.default;if(r&&r.typographyTop&&r.typographyTop.has(e)){const n="removed"===t?"json-diff-removed":"json-diff-added";o.push(`<span class="json-diff-line ${n}">${z}</span>`)}else o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`)}else o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`);I+=(_.match(/\{/g)||[]).length-(_.match(/\}/g)||[]).length,I<=0&&(D=!1);continue}if('"border": {'===T){J=!0,B=1,o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`);continue}if(J){const n=_.match(/"([^"]+)":\s*/);if(n&&1===B){const e=n[1],a=s[i]||{},r=a.states&&a.states.default;if(r&&r.borderTop&&r.borderTop.has(e)){const n="removed"===t?"json-diff-removed":"json-diff-added";o.push(`<span class="json-diff-line ${n}">${z}</span>`)}else o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`)}else o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`);B+=(_.match(/\{/g)||[]).length-(_.match(/\}/g)||[]).length,B<=0&&(J=!1);continue}if(T.startsWith('"fill": [')){F=!0,O=-1,o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`);continue}if(F&&"],"===T){F=!1,o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`);continue}if(T.startsWith("{")&&F){if(S){a+=1,o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`);continue}if(!A){A=!0,O+=1,w=1,o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`);continue}if(w+=1,S){const n=s[i],e=n&&n.states&&n.states.default,a=e&&e.fillsChanges&&e.fillsChanges[O];if(Boolean(a&&a.top&&a.top.has("stops"))){const n="removed"===t?"json-diff-removed":"json-diff-added";o.push(`<span class="json-diff-line ${n}">${z}</span>`);continue}}o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`);continue}if(T.startsWith("}")){if(S){a-=1,a<0&&(S=!1);const n=s[i],e=n&&n.states&&n.states.default,r=e&&e.fillsChanges&&e.fillsChanges[O];if(Boolean(r&&r.top&&r.top.has("stops"))){const n="removed"===t?"json-diff-removed":"json-diff-added";o.push(`<span class="json-diff-line ${n}">${z}</span>`)}else o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`);continue}A&&(w-=1,w<=0&&(A=!1))}if(T.startsWith('"stops": [')){const n=s[i],e=n&&n.states&&n.states.default;if(e&&A){const n=e.fillsChanges&&e.fillsChanges[O];n&&n.top&&n.top.has("stops")&&(q=!0)}if(S=!0,q){const n="removed"===t?"json-diff-removed":"json-diff-added";o.push(`<span class="json-diff-line ${n}">${z}</span>`)}else o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`);continue}o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`),M+=(_.match(/\{/g)||[]).length-(_.match(/\}/g)||[]).length,M<=0&&(v=!1);continue}o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`),$+=(_.match(/\{/g)||[]).length-(_.match(/\}/g)||[]).length,$<=0&&(m=!1);continue}if(T.startsWith('"fills": [')){c=!0,d=-1,o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`);continue}if(c&&"],"===T){c=!1,o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`);continue}if(T.startsWith("{")){if(c){if(p){a+=1,o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`);continue}if(!f){f=!0,d+=1,l=1,o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`);continue}if(l+=1,p){const n=s[i],e=n&&n.fillsChanges&&n.fillsChanges[d];if(Boolean(e&&e.top&&e.top.has("stops"))){const n="removed"===t?"json-diff-removed":"json-diff-added";o.push(`<span class="json-diff-line ${n}">${z}</span>`);continue}}o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`);continue}r?p&&(a+=1):(r=!0,i+=1,a=-1,p=!1),o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`);continue}if(T.startsWith("}")){if(p){a-=1,a<0&&(p=!1);const n=s[i],e=n&&n.fillsChanges&&n.fillsChanges[d];if(Boolean(e&&e.top&&e.top.has("stops"))){const n="removed"===t?"json-diff-removed":"json-diff-added";o.push(`<span class="json-diff-line ${n}">${z}</span>`)}else o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`);continue}f&&(l-=1,l<=0&&(f=!1)),!r||c||f||(r=!1),o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`);continue}if(T.startsWith('"stops": [')){const n=s[i];if(n&&f){const e=n.fillsChanges&&n.fillsChanges[d];e&&e.top&&e.top.has("stops")&&(q=!0)}if(p=!0,q){const n="removed"===t?"json-diff-removed":"json-diff-added";o.push(`<span class="json-diff-line ${n}">${z}</span>`)}else o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`);continue}let q=!1;const C=_.match(/"([^"]+)":\s*/);if(C){H=C[1];const n=s[i];if(n&&f){const e=n.fillsChanges&&n.fillsChanges[d];if(e)if(p&&a>=0){const n=e.stops&&e.stops[a];W=Boolean(n&&n.has(H))}else W=Boolean(e.top&&e.top.has(H))}if(n&&n.states&&n.states.default&&A){const e=n.states.default,t=e.fillsChanges&&e.fillsChanges[O];if(t)if(S&&a>=0){const n=t.stops&&t.stops[a];W=Boolean(n&&n.has(H))}else W=Boolean(t.top&&t.top.has(H))}}if(W){const n="removed"===t?"json-diff-removed":"json-diff-added";o.push(`<span class="json-diff-line ${n}">${z}</span>`)}else o.push(`<span class="json-diff-line json-diff-unchanged">${z}</span>`)}return o}const m=b(p,f,"removed",c),$=b(u,l,"added",c);let F="";return j.forEach(n=>{F+=`<span class="json-diff-line json-diff-unchanged">${n}</span>`}),m.forEach(n=>{F+=n}),h.forEach(n=>{F+=`<span class="json-diff-line json-diff-unchanged">${n}</span>`}),$.forEach(n=>{F+=n}),g.forEach(n=>{F+=`<span class="json-diff-line json-diff-unchanged">${n}</span>`}),F}return e})());